"use strict";angular.module("sbAdminApp",["xeditable"]).controller("merchantsCtrl",function($scope,$http,DTOptionsBuilder,DTColumnBuilder,$compile,$filter,api,$window,$cookieStore){function toggleAll(selectAll,selectedItems){for(var id in selectedItems)selectedItems.hasOwnProperty(id)&&(selectedItems[id]=selectAll)}function toggleOne(selectedItems){for(var id in selectedItems)if($scope.selectedMerchants.push(id),selectedItems.hasOwnProperty(id)&&!selectedItems[id])return void($scope.selectAll=!1);$scope.selectAll=!0}function reloadData(){window.location.reload()}var url=api.addr(),cats=[];$scope.categories=[],$scope.allCats=function(argument){$http({method:"GET",url:url+"get-categories",headers:{Accept:"application/json",Authorization:$cookieStore.get("c2cCookie")},error:function(err){$scope.alert=err.responseJSON.message}}).then(function(response){$scope.categories=response.data.list,angular.forEach($scope.categories,function(value,key){this.push({value:value,text:value})},cats)},function(response){console.log("Oops, Somethings went wrong.")})},$scope.allCats(),$scope.statuses=cats,$scope.selected={},$scope.selectAll=!1,$scope.toggleAll=toggleAll,$scope.toggleOne=toggleOne,$scope.selectedMerchants=[],$scope.alert="",$scope.dtInstance={},$scope.reloadData=reloadData,$scope.testVar="";var titleHtml="";$scope.dtOptions=DTOptionsBuilder.newOptions().withOption("ajax",{url:url+"get-merchants",type:"POST"}).withDataProp("data").withOption("processing",!0).withOption("serverSide",!0).withOption("createdRow",function(row,data,dataIndex){$($compile(angular.element(row).contents())($scope)[3]).each(function(index){var anchor=$(this).children("a");$(this).click(function(){var frm=$(this).children("form");$(this).find("button.btn-primary").click(function(){var catName=$(".editable-has-buttons option:selected").text(),merchantId=data._id,req={method:"POST",url:url+"update-merchant-category-once-at-a-time",data:{merchantId:merchantId,category:catName}};$http(req).then(function(response){response.data.Success&&($(frm).hide(),$(anchor).removeClass("editable-hide"),$(anchor).text(catName)),console.log(response.data.Success)},function(response){console.log(response)})})})})}).withOption("headerCallback",function(header){$window.scrollTo(0,0),$scope.headerCompiled||($scope.headerCompiled=!0,$compile(angular.element(header).contents())($scope))}).withOption("stateSave",!0).withOption("aaSorting",[5,"desc"]),$scope.dtColumns=[DTColumnBuilder.newColumn("_id").notVisible().withOption("searchable",!1),DTColumnBuilder.newColumn(null).withTitle("#").renderWith(function(data,type,full,meta){return meta.settings._iDisplayStart+meta.row+1}).notSortable().withOption("searchable",!1).withOption("width","2%"),DTColumnBuilder.newColumn(null).withTitle(titleHtml).notSortable().renderWith(function(data,type,full,meta){var merchant_id=JSON.stringify(data._id);return"<input ng-model='selected["+merchant_id+"]' name=chk[] class='multi-check' ng-click='toggleOne(selected)' type='checkbox'>"}).withOption("searchable",!1),DTColumnBuilder.newColumn("name").withTitle("Merchant"),DTColumnBuilder.newColumn("Type").withTitle("Type").renderWith(function(data,type,full,meta){return $scope.type={catName:data},"<a ng-click=\"showSelected('"+data+'\')" href="#" editable-select="type.catName" e-ng-options="s.value as s.text for s in statuses">'+data+"</a>"}),DTColumnBuilder.newColumn("dateCreated").withTitle("Created").renderWith(function(data,type,full){return $filter("date")(data,"medium")}).withOption("searchable",!1),DTColumnBuilder.newColumn("dateModified").withTitle("Updated").renderWith(function(data,type,full){return $filter("date")(data,"medium")}).withOption("searchable",!1),DTColumnBuilder.newColumn("icon").notVisible().withOption("searchable",!1),DTColumnBuilder.newColumn("imageUrl").notVisible().withOption("searchable",!1),DTColumnBuilder.newColumn(null).withTitle("Category").notSortable().renderWith(function(data,type,full,meta){return'<img ng-src="'+data.icon+'" height="50" width="50" alt=""/>'}).withOption("width","5%").withOption("searchable",!1)],$scope.changeMerchantCategory=function(){var category=angular.isUndefined($scope.merchantdata)?"":$scope.merchantdata.category,allMerchants=$scope.selected;if(""==category)return void alert("Please select category");if(0==Object.keys(allMerchants).length)return void alert("Please select merchant");var merchants=[],atleastOneSelected=!1;if(angular.forEach(allMerchants,function(value,merchant_id){value&&(this.push(merchant_id),atleastOneSelected=!0)},merchants),atleastOneSelected){var req={method:"POST",url:url+"update-merchant-category",data:{merchants:merchants,category:category}};$http(req).then(function(response){$scope.alert=response.data.Success,$scope.merchantdata.category="",reloadData(),console.log(response.data.Success)},function(response){console.log(response)})}else alert("Please select merchant")},$scope.showSelected=function(selectedMerchantType){$scope.selectedOption=selectedMerchantType}});